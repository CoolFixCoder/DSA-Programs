// Complexity
//Time complexity : O(n)
//Space complexity : O(1)

class Solution
{
public:
    void rotate(std::vector<int>& nums, int k)
    {
        k %= nums.size();
        reverse(nums, 0, nums.size() - 1);
        reverse(nums, 0, k - 1);
        reverse(nums, k, nums.size() - 1);
    }
private:
    void reverse(std::vector<int>& nums, int left, int right)
    {
        while (left < right)
        {
            std::swap(nums[left], nums[right]);
            left++;
            right--;
        }
    }
};
int main()
{
//Input: nums = [1, 2, 3, 4, 5, 6, 7], k = 3
//Output : [5, 6, 7, 1, 2, 3, 4]
    std::vector<int> nums{ 1, 2, 3, 4, 5, 6, 7 };
     //rotate(nums,3);
    Solution sol;
    sol.rotate(nums, 3);
    for (int n : nums)
        std::cout << n << std::endl;
}
